var fs = require('fs'),
    mongoose = require('mongoose'),
    OOTDSchema,
    Images;

// Create the "uploads" folder if it doesn't exist
fs.exists(__dirname + '/uploads', function (exists) {
    if (!exists) {
        console.log('Creating directory ' + __dirname + '/uploads');
        fs.mkdir(__dirname + '/uploads', function (err) {
            if (err) {
                console.log('Error creating ' + __dirname + '/uploads');
                process.exit(1);
            }
        })
    }
});

// Connect to database
module.exports = {
  connectDb: function(){

    var uri = "mongodb://ryanstack:ootd123@ds035310.mongolab.com:35310/ootd"
    mongoose.connect(uri);
    var db = mongoose.connection;
    db.on('open', function () {
      console.log('Mongoose default connection open to ' + uri);
    });

    db.on('error',function (err) {
      console.log('Mongoose default connection error: ' + err);
    });

    db.on('disconnected', function () {
      console.log('Mongoose default connection disconnected');
    });

    //configuring the Database Schema

    OOTDSchema = new mongoose.Schema(
      { outfit: { type: String} });

    ImageModel = mongoose.model('Pics', OOTDSchema);

  },


  getImages: function(req, res, next) {

    ImageModel.find({},
      'outfit', // Columns to Return
      {
        skip:0, // Starting Row
        limit:10, // Ending Row
        sort:{
        count: -1 //Sort by Date Added DESC
        }
      },
      function (err, data) {
        if (err) {
            console.log(err);
            return next(err);
        }
        res.json(data);
    })
  },



  addImage: function(req, res, next) {
    var fstream;
    // var fashion = req.body.fashionQuestion
    // console.log(fashion)
      req.pipe(req.busboy);
      req.busboy.on('file', function (fieldname, file, filename) {
        console.log("Uploading: " + filename);
        console.log(fieldname)
        fstream = fs.createWriteStream(__dirname + '/uploads/' + filename);
        file.pipe(fstream);
        fstream.on('close', function () {
            res.redirect('back');
        });
        var newDocument = new ImageModel( { outfit: filename} );
        newDocument.save(function(err) { if( err ) throw new Error( 'There was an error while saving to the database.' ) })
    });
  }

}


    // console.log("upload");
    // console.log(req.files)
    // console.log(req.body)
    // var file = req.files.thumbnail.path;
    // var target_path = './uploads/' + req.files.thumbnail.name;
//        fileName = file.name, file name passed by client. Not used here. We use the name auto-generated by Node
//         lastIndex = filePath.lastIndexOf("/"),
//         tmpFileName = filePath.substr(lastIndex + 1),
//         image = req.body,
//         images = db.collection('images');

//     image.fileName = tmpFileName;
//     console.log(tmpFileName);

//     Images.update(image, function (err, result) {
//         if (err) {
//             console.log(err);
//             return next(err);
//         }
//         res.json(image);
//     });
// };