// var fs = require('fs'),
//     mongoose = require('mongoose'),
//     passportLocalMongoose = require('passport-local-mongoose'),
//     OOTDSchema,
//     Images;


// // Connect to database
// module.exports = {
//   connectDb: function(){

//     var uri = "mongodb://ryanstack:ootd123@ds035310.mongolab.com:35310/ootd"
//     mongoose.connect(uri);
//     var db = mongoose.connection;
//     db.on('open', function () {
//       console.log('Mongoose default connection open to ' + uri);
//     });

//     db.on('error',function (err) {
//       console.log('Mongoose default connection error: ' + err);
//     });

//     db.on('disconnected', function () {
//       console.log('Mongoose default connection disconnected');
//     });

//     //configuring the Database Schema

//     OOTDSchema = new mongoose.Schema(
//       { outfit: String, question: String, comments: [{ note: String, author: String, date: Date }] });


//     ImageModel = mongoose.model('Pics', OOTDSchema);

//   },


//   getImages: function(req, res, next) {

//     ImageModel.find({}).limit(20).exec(
//       function (err, data) {
//         if (err) {
//             console.log(err);
//             return next(err);
//         }
//         res.json(data);
//     }
//     )
//   },



//   addImage: function(req, res, next) {
//     console.log(req.body)

//     var image = req.body.pics
//     var questionF = req.body.questions
//     var newDocument = new ImageModel( { outfit: image, question: questionF } );
//     newDocument.save(function(err) { if( err ) throw new Error( 'There was an error while saving to the database.' ) })
//     },


//     addComment: function(req, res, next) {
//       console.log(req.body)
//       var textServer = req.body.text
//       console.log(textServer)
//       var newComment = {
//       note: textServer.note,
//       date: textServer.date
//     };
//     console.log(req.body.picID)
//     console.log(newComment)
//       ImageModel.update({ _id: req.body.picID}, {$push: { comments : newComment }}, {upsert:true}, function(err, data) {
//           if (err) { console.log(err) }
//       });

//       // Event.update({ tweet: text }, { $inc: { count: 1 }}, { upsert: true }, function(err) {
//       // if (err) { console.log(err) }
//       // })

//     }


// }


    // console.log("upload");
    // console.log(req.files)
    // console.log(req.body)
    // var file = req.files.thumbnail.path;
    // var target_path = './uploads/' + req.files.thumbnail.name;
//        fileName = file.name, file name passed by client. Not used here. We use the name auto-generated by Node
//         lastIndex = filePath.lastIndexOf("/"),
//         tmpFileName = filePath.substr(lastIndex + 1),
//         image = req.body,
//         images = db.collection('images');

//     image.fileName = tmpFileName;
//     console.log(tmpFileName);

//     Images.update(image, function (err, result) {
//         if (err) {
//             console.log(err);
//             return next(err);
//         }
//         res.json(image);
//     });
// };





 // var fstream;
    // var fashion = req.body.fashionQuestion
    // console.log(fashion)
    //   req.pipe(req.busboy);
    //   req.busboy.on('file', function (fieldname, file, filename) {
    //     console.log("Uploading: " + filename);
    //     console.log(fieldname)
    //     fstream = fs.createWriteStream(__dirname + '/uploads/' + filename);
    //     file.pipe(fstream);
    //     fstream.on('close', function () {
    //         res.redirect('back');
    //     });


// fs.exists(__dirname + '/uploads', function (exists) {
//     if (!exists) {
//         console.log('Creating directory ' + __dirname + '/uploads');
//         fs.mkdir(__dirname + '/uploads', function (err) {
//             if (err) {
//                 console.log('Error creating ' + __dirname + '/uploads');
//                 process.exit(1);
//             }
//         })
//     }
// });